================
Empty
================
---

(return (integer_literal))

================
Empty, Whitespace
================
    
 

---

(return (integer_literal))

================
Empty, Hard Expression Separators
================
; ; ; ; ; ; ;
; ; ; ;
---

(return (integer_literal))

================
Empty, Soft Expression Separators
================
,,,,,,   ,,  ,, , ,    , ,, ,
,,    , ,  ,, ,,
---

(return (integer_literal))

================
Empty, Hard+Soft Expression Separators
================
;,,;,,;,,   ;,,;  ,,; ,; ;,; ;   , ;,, ,
; ,,    ;, ,  ,, ,,  ;
---

(return (integer_literal))

================
Return Literal Number
================

49;

---

(block (return (integer_literal)))

================
Return Literal Number, Explicit
================

return 49;

---

(block (return (integer_literal)))

================
Return Literal Number w/ Digit Separator
================

6'9;

---

(block (return (integer_literal)))

================
Return Literal Number, Binary
================

0b01000101;

---

(block (return (integer_literal)))

================
Return Literal Number, Octal
================

0o105;

---

(block (return (integer_literal)))

================
Return Literal Number, Hexadecimal
================

0x45;

---

(block (return (integer_literal)))


================
Return Literal Number, Binary w/ Digit Separators
================

0b'01'00'01'01;

---

(block (return (integer_literal)))

================
Declaration, Primitive
================

x :int 42;

---

(block (return (cast (variable_declaration (integer_literal)))))

================
Function Declaration, Immediate Expression
================

x :int() 42;
x;

---

(block
 (function_declaration
  (return (integer_literal)))
 (return (call (name))))

================
Function Declaration, Block Expression
================

x :int() { 42; };
x;

---

(block
 (function_declaration
  (block (return (integer_literal))))
 (return (call (name))))

================
Function Declaration, Block Expression w/ Explicit Return
================

x :int() { return 42; };
x;

---

(block
 (function_declaration
  (block (return (integer_literal))))
 (return (call (name))))

================
Declaration, Function
================

x :int() 42;
x;

---

(block
 (function_declaration
  (return (integer_literal)))
 (return (call (name))))
