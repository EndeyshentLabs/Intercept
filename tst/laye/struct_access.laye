// R %lcc --ir %s
// d b [a-zA-Z0-9\.]+
// d t %[0-9]+

// * struct vec2i { i64, i64 }
struct vec2i
{
    int x;
    int y;
}

// * main : i64():
// +   bb0:
// +     (?<v>$t) = alloca @vec2i
// +     (?<x0>$t) = gmp @vec2i from $v at i64 0
// +     store i64 34 into $x0
// +     (?<y0>$t) = gmp @vec2i from $v at i64 1
// +     store i64 35 into $y0
// +     (?<x1>$t) = gmp @vec2i from $v at i64 0
// +     (?<loadx>$t) = load i64 from $x1
// +     (?<y1>$t) = gmp @vec2i from $v at i64 1
// +     (?<loady>$t) = load i64 from $y1
// +     (?<retv>$t) = add i64 $loadx, $loady
// +     return i64 $retv
int main()
{
    vec2i v;
    v.x = 34;
    v.y = 35;
    return v.x + v.y;
}
